#include "stdint.h"
#include "C:/Keil/Labware/inc/tm4c123gh6pm.h"
void delay_milli(int n);
void delay_micro(int n);
void LCD_init(void);
void LCD_Cmd(unsigned char command);
void LCD_Data(unsigned char data);


// LCD 

/*
void LCD_comm(char c){                  // We are using PORTC for LED control
	
	//RS(bit-5) , RW(bit-6) , En(bit-7)
	GPIO_PORTC_DATA_R=0;
	GPIO_PORTC_DATA_R=c;
	GPIO_PORTC_DATA_R=0x80;
	
	//delay(); !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!1
	GPIO_PORTC_DATA_R=0;

	
}

void LCD_data(char d){
	
	//RS(bit-5) , RW(bit-6) , En(bit-7)
	GPIO_PORTC_DATA_R=0x20;
	GPIO_PORTC_DATA_R=d;
	GPIO_PORTC_DATA_R=0x80;
	
	//delay(); !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!1
	GPIO_PORTC_DATA_R=0;
	
}
*/
//***************************************************************************************************************
void Init(void){

	SYSCTL_RCGCGPIO_R |= 0x20;
	while((SYSCTL_PRGPIO_R & 0x20)==0){};

	// PORTF
	GPIO_PORTF_LOCK_R = 0x4C4F434B;
	GPIO_PORTF_CR_R = 0x1F;

	GPIO_PORTF_DIR_R = 0xE;
	GPIO_PORTF_PUR_R = 0x11;

	GPIO_PORTF_DEN_R = 0x1F;
	GPIO_PORTF_AMSEL_R = 0;

	GPIO_PORTF_AFSEL_R = 0;
	GPIO_PORTF_PCTL_R = 0 ;
	//------------------------------------------------------
	

}
//***************************************************************************************************************
int main(){
	Init();
	while(1){
	if( (GPIO_PORTF_DATA_R & 0x11) == 0x01 ){
		GPIO_PORTF_DATA_R = 0x02;
	}

	else if( (GPIO_PORTF_DATA_R & 0x11)==0x10 ){
		GPIO_PORTF_DATA_R = 0x02;
	}

	else {
		GPIO_PORTF_DATA_R = 0x0E;
	}
}
	}

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	// PORTA For Sellectors &  PORTB to Showin output
	void LCD_init(void){
SYSCTL_RCGCGPIO_R |= 0x01; //PORTA clock
SYSCTL_RCGCGPIO_R |= 0x02;
GPIO_PORTA_DIR_R |=0xE0; //PORTA controls RS,E and R/W
GPIO_PORTA_DEN_R |=0xE0;
GPIO_PORTB_DIR_R |=0xFF; //PORTB D0-D7
GPIO_PORTB_DEN_R |=0xFF; //PORTB D0-D7
LCD_Cmd(0x38); //8-bits,2 display lines, 5x7 font
LCD_Cmd(0x06); //increments automatically
LCD_Cmd(0x0F); //Turn on display
LCD_Cmd(0x01); //clear display
 
}
	void LCD_Cmd(unsigned char command)
{
GPIO_PORTA_DATA_R = 0x00; //RS =0, E=0, RW=0
GPIO_PORTB_DATA_R =command;
GPIO_PORTA_DATA_R =0x80; //E=1 to secure command
delay_micro(0);
GPIO_PORTA_DATA_R =0x00;
if(command <4) delay_milli(2); else delay_micro(37); 
	}
	void LCD_Data(unsigned char data) { GPIO_PORTA_DATA_R =0x20; //RS=1, E=0,RW=0
	GPIO_PORTB_DATA_R =data;
	GPIO_PORTA_DATA_R |= 0x80;
	GPIO_PORTA_DATA_R =0x00;
	delay_micro(0);
	 
	}
// For Delay 

void delay_milli(int n){
int i,j;
for(i=0;i<n;i++){
	for(j=0;j<3180;j++)
{}
}
}
 
void delay_micro(int n){
int i,j;
for(i=0;i<n;i++)
for(j=0;j<3;j++)
{}
}
//-----------------------------------------------------------------------------------------------------------------	
