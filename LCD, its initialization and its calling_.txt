#include <stdint.h>
#include "inc/tm4c123gh6pm.h"
void Init(void);
void delay_milli(int n);
void delay_micro(int n);
void LCD_init(void);
void LCD_Cmd(unsigned char command);
void LCD_Data(unsigned char data);

//***************************************************************************************************************

//***************************************************************************************************************
    int main(){
    Init();
    LCD_init();
    int final = 245;

    LCD_Cmd(0x01);
    LCD_Cmd(0x80);
    delay_milli(500);
    LCD_Data('D');
    delay_milli(1);
    LCD_Data('i');
    delay_milli(1);
    LCD_Data('S');
    delay_milli(1);
    LCD_Data('t');
    delay_milli(1);
    LCD_Data('a');
    delay_milli(1);
    LCD_Data('n');
    delay_milli(1);
    LCD_Data('c');
    delay_milli(1);
    LCD_Data('e');
    delay_milli(1);
    LCD_Data('=');
    delay_milli(1);
    separating_h(final);
    delay_milli(1);
    separating_t(final);
    delay_milli(1);
    separating_u(final);
    delay_milli(1);
    LCD_Data('m');
    delay_milli(500);
    while(1){
    if( (GPIO_PORTF_DATA_R & 0x11) == 0x01 ){
        GPIO_PORTF_DATA_R = 0x02;
    }

    else if( (GPIO_PORTF_DATA_R & 0x11)==0x10 ){
        GPIO_PORTF_DATA_R = 0x02;
    }

    else {
        GPIO_PORTF_DATA_R = 0x0E;
    }
}
    }
    //}


void Init(void){

    SYSCTL_RCGCGPIO_R |= 0x20;
    while((SYSCTL_PRGPIO_R & 0x20)==0){};

    // PORTF
    GPIO_PORTF_LOCK_R = 0x4C4F434B;
    GPIO_PORTF_CR_R = 0x1F;

    GPIO_PORTF_DIR_R = 0xE;
    GPIO_PORTF_PUR_R = 0x11;

    GPIO_PORTF_DEN_R = 0x1F;
    GPIO_PORTF_AMSEL_R = 0;

    GPIO_PORTF_AFSEL_R = 0;
    GPIO_PORTF_PCTL_R = 0 ;
    //------------------------------------------------------
}




    // PORTA For Sellectors &  PORTB to Showin output
    void LCD_init(void){
SYSCTL_RCGCGPIO_R |= 0x00; //PORTA clock
SYSCTL_RCGCGPIO_R |= 0x01;
SYSCTL_RCGCGPIO_R |= 0x02;
GPIO_PORTA_DIR_R |=0xE0; //PORTA controls RS,E and R/W
GPIO_PORTA_DEN_R |=0xE0;
GPIO_PORTB_DIR_R |=0xFF; //PORTB D0-D7
GPIO_PORTB_DEN_R |=0xFF; //PORTB D0-D7
LCD_Cmd(0x38); //8-bits,2 display lines, 5x7 font
LCD_Cmd(0x06); //increments automatically
LCD_Cmd(0x0F); //Turn on display
LCD_Cmd(0x01); //clear display

}
    void LCD_Cmd(unsigned char command)
{
GPIO_PORTA_DATA_R = 0x00; //RS =0, E=0, RW=0
GPIO_PORTB_DATA_R =command;
GPIO_PORTA_DATA_R =0x80; //E=1 to secure command
delay_micro(0);
GPIO_PORTA_DATA_R =0x00;
if(command <4) delay_milli(2); else delay_micro(37);
    }
    void LCD_Data(unsigned char data) { GPIO_PORTA_DATA_R =0x20; //RS=1, E=0,RW=0
    GPIO_PORTB_DATA_R =data;
    GPIO_PORTA_DATA_R |= 0x80;
    GPIO_PORTA_DATA_R =0x00;
    delay_micro(0);

    }
    //**************************************************************************
    // to separete number into digits
    int separating_u(int final){
       int num = final;
       int u;
       u=num%10;
       return (u+48);
   }
    int separating_t(int final){
       int num = final;
       int t;
       t=(num/10)%10;
       return (t+48);
   }


    int separating_h(int final){
    int num = final;
    int h;
    h=num/100;
    return (h+48);
}
//********************************************************
// For Delay

void delay_milli(int n){
int i,j;
for(i=0;i<n;i++){
    for(j=0;j<3180;j++)
{}
}
}

void delay_micro(int n){
int i,j;
for(i=0;i<n;i++)
for(j=0;j<3;j++)
{}
}
